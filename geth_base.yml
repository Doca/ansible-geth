---
- name: include geth vars
  include_vars: 
    file: vars/geth.yml

- name: add ether user
  user:
    name: "{{ geth_user }}"

- name: "create {{ geth_user }} build dir"
  become_user: "{{ geth_user }}"
  file:
    path: "/home/{{ geth_user }}/build/"
    owner: "{{ geth_user }}"
    group: "{{ geth_user }}"
    state: directory

- name: create geth extraction dir
  become_user: "{{ geth_user }}"
  file:
    path: "/home/{{ geth_user }}/build/geth"
    owner: "{{ geth_user }}"
    group: "{{ geth_user }}"
    state: directory

- name: download geth
  become_user: "{{ geth_user }}"
  get_url:
    url: "https://gethstore.blob.core.windows.net/builds/{{ geth_build }}.tar.gz"
    dest: "/home/{{ geth_user }}/build/{{ geth_build }}.tar.gz"
    mode: 0644
    checksum: "{{ geth_checksum }}"

- name: extract geth tarball
  become_user: "{{ geth_user }}"
  unarchive:
    remote_src: yes
    src: "/home/{{ geth_user }}/build/{{ geth_build }}.tar.gz"
    dest: "/home/{{ geth_user }}/build/"

- name: create .local/bin
  become_user: "{{ geth_user }}"
  file:
    path: "/home/{{ geth_user }}/.local/bin"
    owner: "{{ geth_user }}"
    group: "{{ geth_user }}"
    state: directory

- name: ensure geth mainnet service stopped before copy
  shell: "[[ -e /etc/systemd/system/multi-user.target.wants/geth.service ]] && systemctl stop geth"
  ignore_errors: yes

- name: ensure geth ropsten service stopped before copy
  shell: "[[ -e /etc/systemd/system/multi-user.target.wants/geth-ropsten.service ]] && systemctl stop geth-ropsten"
  ignore_errors: yes

- name: put geth executable in ~/.local/bin
  become_user: "{{ geth_user }}"
  shell: "cp /home/{{ geth_user }}/build/{{ geth_build }}/geth /home/{{ geth_user }}/.local/bin/geth"

- name: update ether's environment
  become_user: "{{ geth_user }}"
  script: "files/addpath.sh /home/{{ geth_user }}/.local/bin"

- name: create .ethereum
  file:
    state: directory
    path: /home/{{ geth_user }}/.ethereum
    owner: ether
    group: ether
    mode: 0750

- name: check firewalld availability
  shell: firewall-cmd --state
  register: firewall_state
  ignore_errors: true